{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { withNavigation } from '@react-navigation/compat';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Container, Header, Content, Card, CardItem, Body, Text, Footer, Icon, Item, Input, FooterTab, Button, Left, Right, Title, List, ListItem, Thumbnail } from 'native-base';\nimport Icono from \"@expo/vector-icons/Ionicons\";\nimport SwiperFlatList from 'react-native-swiper-flatlist';\nimport ConfigApp from \"../utils/ConfigApp\";\nimport AppPreLoader from \"./AppPreLoader\";\nimport GridView from 'react-native-super-grid';\nimport Strings from \"../utils/Strings\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport ColorsApp from \"../utils/ColorsApp\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar styles = require(\"../../assets/files/Styles\");\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar GridRecipesHome = function (_React$PureComponent) {\n  _inherits(GridRecipesHome, _React$PureComponent);\n\n  var _super = _createSuper(GridRecipesHome);\n\n  function GridRecipesHome(props) {\n    var _this;\n\n    _classCallCheck(this, GridRecipesHome);\n\n    _this = _super.call(this, props);\n\n    _this.RecipeDetails = function (item) {\n      _this.props.navigation.navigate('RecipeDetailsScreen', {\n        item: item\n      });\n    };\n\n    _this.state = {\n      recipes: []\n    };\n    return _this;\n  }\n\n  _createClass(GridRecipesHome, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return fetch(ConfigApp.URL + 'json/data_recipes.php').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this2.setState({\n          recipes: responseJson.filter(function (e, index) {\n            return index < 6;\n          })\n        }, function () {});\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _jsx(List, {\n        children: _jsx(FlatList, {\n          data: this.state.recipes,\n          refreshing: \"false\",\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsxs(ListItem, {\n              style: {\n                paddingLeft: 0,\n                marginLeft: 0,\n                backgroundColor: '#FFF',\n                opacity: 1,\n                borderColor: 'rgba(0,0,0,0.05)',\n                borderBottomWidth: 1\n              },\n              onPress: function onPress() {\n                return _this3.RecipeDetails(item);\n              },\n              children: [_jsx(Thumbnail, {\n                size: 80,\n                source: {\n                  uri: ConfigApp.URL + 'images/' + item.recipe_image\n                },\n                style: {\n                  paddingLeft: 10,\n                  marginLeft: 10,\n                  borderRadius: 10\n                }\n              }), _jsxs(Body, {\n                style: {\n                  paddingLeft: 0,\n                  marginLeft: 0\n                },\n                children: [_jsx(Text, {\n                  numberOfLines: 1,\n                  style: {\n                    fontSize: 14,\n                    fontWeight: 'bold',\n                    marginBottom: 5\n                  },\n                  children: item.recipe_title\n                }), _jsxs(View, {\n                  style: {\n                    flexDirection: 'row',\n                    marginBottom: 5\n                  },\n                  children: [_jsx(Image, {\n                    source: require(\"../../assets/images/cooktime.png\"),\n                    style: {\n                      width: 15,\n                      height: 15,\n                      marginLeft: 12,\n                      marginRight: -8\n                    }\n                  }), _jsx(Text, {\n                    style: {\n                      fontSize: 12,\n                      color: '#9e9e9e'\n                    },\n                    children: item.recipe_time\n                  }), _jsx(Image, {\n                    source: require(\"../../assets/images/calories.png\"),\n                    style: {\n                      width: 15,\n                      height: 15,\n                      marginRight: -8\n                    }\n                  }), _jsx(Text, {\n                    style: {\n                      fontSize: 12,\n                      color: '#9e9e9e'\n                    },\n                    children: item.recipe_cals\n                  })]\n                })]\n              }), _jsx(Right, {\n                children: _jsx(Text, {\n                  note: true,\n                  children: _jsx(Icon, {\n                    name: \"ios-arrow-forward\",\n                    style: {\n                      fontSize: 16\n                    }\n                  })\n                })\n              })]\n            });\n          },\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          }\n        })\n      });\n    }\n  }]);\n\n  return GridRecipesHome;\n}(React.PureComponent);\n\nexport default withNavigation(GridRecipesHome);","map":{"version":3,"sources":["/root/home/projects/modern-recipe/application/components/GridRecipesHome.js"],"names":["React","PureComponent","withNavigation","Container","Header","Content","Card","CardItem","Body","Text","Footer","Icon","Item","Input","FooterTab","Button","Left","Right","Title","List","ListItem","Thumbnail","Icono","SwiperFlatList","ConfigApp","AppPreLoader","GridView","Strings","LinearGradient","ColorsApp","styles","require","Dimensions","get","height","width","GridRecipesHome","props","RecipeDetails","item","navigation","navigate","state","recipes","fetch","URL","then","response","json","responseJson","setState","filter","e","index","catch","error","console","paddingLeft","marginLeft","backgroundColor","opacity","borderColor","borderBottomWidth","uri","recipe_image","borderRadius","fontSize","fontWeight","marginBottom","recipe_title","flexDirection","marginRight","color","recipe_time","recipe_cals","toString"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react';\nimport { withNavigation } from '@react-navigation/compat';\nimport { ImageBackground, Dimensions, View, ScrollView, ActivityIndicator, TouchableOpacity, FlatList, Image } from 'react-native';\nimport { Container, Header, Content, Card, CardItem, Body, Text, Footer, Icon, Item, Input, FooterTab, Button, Left, Right, Title, List, ListItem, Thumbnail} from 'native-base';\nimport Icono from 'react-native-vector-icons/Ionicons';\nimport SwiperFlatList from 'react-native-swiper-flatlist';\nimport ConfigApp from '../utils/ConfigApp';\nimport AppPreLoader from './AppPreLoader';\nimport GridView from 'react-native-super-grid';\nimport Strings from '../utils/Strings';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport ColorsApp from '../utils/ColorsApp';\n\nvar styles = require('../../assets/files/Styles');\nvar {height, width} = Dimensions.get('window');\n\nclass GridRecipesHome extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes:[]\n    };\n  }\n\n\n    componentDidMount() {\n    \n       return fetch(ConfigApp.URL+'json/data_recipes.php')\n         .then((response) => response.json())\n         .then((responseJson) => {\n           this.setState({\n             recipes: responseJson.filter((e, index) => { return index < 6 }),\n           }, function() {\n           });\n         })\n         .catch((error) => {\n           console.error(error);\n         });\n     }\n\n  RecipeDetails = (item) => {\n    this.props.navigation.navigate('RecipeDetailsScreen', {item});\n  };\n\n\trender () {\n\n\t\treturn (\n\n\n<List>\n\n<FlatList\n          data={ this.state.recipes }\n          refreshing=\"false\"\n          renderItem={({item}) =>\n                \n            <ListItem style={{paddingLeft: 0, marginLeft: 0, backgroundColor:'#FFF', opacity: 1, borderColor: 'rgba(0,0,0,0.05)', borderBottomWidth: 1}}  onPress={() => this.RecipeDetails(item)} >\n              <Thumbnail size={80} source={{ uri: ConfigApp.URL+'images/'+item.recipe_image }} style={{paddingLeft: 10, marginLeft: 10, borderRadius: 10}} />\n              <Body style={{paddingLeft: 0, marginLeft: 0}}>\n                <Text numberOfLines={1} style={{fontSize: 14, fontWeight: 'bold', marginBottom: 5}}>\n                {item.recipe_title}\n                </Text>\n                <View style={{flexDirection: 'row', marginBottom: 5}}>\n                <Image source={require('../../assets/images/cooktime.png')} style={{width: 15, height: 15, marginLeft: 12, marginRight: -8}} />\n                <Text style={{ fontSize: 12, color: '#9e9e9e'}}>{item.recipe_time}</Text>\n                <Image source={require('../../assets/images/calories.png')} style={{width: 15, height: 15, marginRight: -8}} />\n                <Text style={{ fontSize: 12, color: '#9e9e9e'}}>{item.recipe_cals}</Text>\n                </View>\n              </Body>\n              <Right>\n                <Text note>\n                <Icon name=\"ios-arrow-forward\" style={{fontSize: 16}}/>\n                </Text>\n              </Right>\n            </ListItem>\n          \n}\n        keyExtractor={(item, index) => index.toString()}\n\n        /> \n\n</List>\n\t\t)\n\t}\n}\n\nexport default withNavigation(GridRecipesHome);\n"]},"metadata":{},"sourceType":"module"}
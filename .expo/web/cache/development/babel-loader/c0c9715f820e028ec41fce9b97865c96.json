{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport * as firebase from 'firebase';\nimport { withNavigation } from '@react-navigation/compat';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Icon from \"@expo/vector-icons/SimpleLineIcons\";\nimport { Container, Body, Thumbnail, Text, List, Right, ListItem } from 'native-base';\nimport ConfigApp from \"../utils/ConfigApp\";\nimport ListEmpty from \"./ListEmpty\";\nimport Strings from \"../utils/Strings\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar styles = require(\"../../assets/files/Styles\");\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar RecipeFav = function (_React$Component) {\n  _inherits(RecipeFav, _React$Component);\n\n  var _super = _createSuper(RecipeFav);\n\n  function RecipeFav(props) {\n    var _this;\n\n    _classCallCheck(this, RecipeFav);\n\n    _this = _super.call(this, props);\n\n    _this.RecipeDetails = function (item) {\n      _this.props.navigation.navigate('RecipeDetailsScreen', {\n        item: item\n      });\n    };\n\n    _this.ListEmptyView = function () {\n      return _jsx(ListEmpty, {});\n    };\n\n    _this.removeRecipe = function _callee(recipe_id) {\n      var user, recipes, recipesFav;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              user = firebase.auth().currentUser;\n              uid = user.uid;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('recipes'));\n\n            case 5:\n              recipes = _context.sent;\n              recipesFav = JSON.parse(recipes);\n              recipesItems = recipesFav.filter(function (e) {\n                return e.recipe_id !== recipe_id && e.userId == uid;\n              });\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('recipes', JSON.stringify(recipesItems)));\n\n            case 10:\n              _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n                recipes: recipesItems || []\n              }));\n\n              _context.next = 15;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 13]], Promise);\n    };\n\n    _this.state = {\n      recipes: []\n    };\n    return _this;\n  }\n\n  _createClass(RecipeFav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchRecipes();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsx(List, {\n        children: _jsx(FlatList, {\n          data: this.state.recipes,\n          refreshing: \"false\",\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsxs(ListItem, {\n              style: {\n                paddingLeft: 0,\n                marginLeft: 0,\n                backgroundColor: '#FFF',\n                opacity: 1,\n                borderColor: 'rgba(0,0,0,0.05)',\n                borderBottomWidth: 1\n              },\n              onPress: function onPress() {\n                return _this2.RecipeDetails(item);\n              },\n              children: [_jsx(Thumbnail, {\n                size: 80,\n                source: {\n                  uri: ConfigApp.URL + 'images/' + item.recipe_image\n                },\n                style: {\n                  paddingLeft: 10,\n                  marginLeft: 10,\n                  borderRadius: 10\n                }\n              }), _jsxs(Body, {\n                style: {\n                  paddingLeft: 0,\n                  marginLeft: 0\n                },\n                children: [_jsx(Text, {\n                  numberOfLines: 1,\n                  style: {\n                    fontSize: 14,\n                    fontWeight: 'bold',\n                    marginBottom: 5\n                  },\n                  children: item.recipe_title\n                }), _jsxs(View, {\n                  style: {\n                    flexDirection: 'row',\n                    marginBottom: 5\n                  },\n                  children: [_jsx(Image, {\n                    source: require(\"../../assets/images/cooktime.png\"),\n                    style: {\n                      width: 15,\n                      height: 15,\n                      marginLeft: 12,\n                      marginRight: -8\n                    }\n                  }), _jsx(Text, {\n                    style: {\n                      fontSize: 12,\n                      color: '#9e9e9e'\n                    },\n                    children: item.recipe_time\n                  }), _jsx(Image, {\n                    source: require(\"../../assets/images/calories.png\"),\n                    style: {\n                      width: 15,\n                      height: 15,\n                      marginRight: -8\n                    }\n                  }), _jsx(Text, {\n                    style: {\n                      fontSize: 12,\n                      color: '#9e9e9e'\n                    },\n                    children: item.recipe_cals\n                  })]\n                })]\n              }), _jsx(Right, {\n                children: _jsx(TouchableOpacity, {\n                  onPress: _this2.removeRecipe.bind(_this2, item.recipe_id),\n                  activeOpacity: 1,\n                  children: _jsx(Text, {\n                    note: true,\n                    children: _jsx(Icon, {\n                      name: \"trash\",\n                      style: {\n                        fontSize: 18\n                      }\n                    })\n                  })\n                })\n              })]\n            });\n          },\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          ListEmptyComponent: this.ListEmptyView\n        })\n      });\n    }\n  }, {\n    key: \"fetchRecipes\",\n    value: function fetchRecipes() {\n      var user, recipesJSON, recipesFav, recipesArray;\n      return _regeneratorRuntime.async(function fetchRecipes$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              user = firebase.auth().currentUser;\n              uid = user.uid;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('recipes'));\n\n            case 4:\n              recipesJSON = _context2.sent;\n              recipesFav = JSON.parse(recipesJSON);\n              recipesItems = recipesFav.filter(function (e) {\n                return e.userId == uid;\n              });\n              recipesArray = recipesItems || [];\n              this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                recipes: recipesArray\n              }));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return RecipeFav;\n}(React.Component);\n\nexport default withNavigation(RecipeFav);","map":{"version":3,"sources":["/root/home/projects/modern-recipe/application/components/RecipeFav.js"],"names":["React","Component","firebase","withNavigation","Icon","Container","Body","Thumbnail","Text","List","Right","ListItem","ConfigApp","ListEmpty","Strings","AsyncStorage","styles","require","Dimensions","get","height","width","RecipeFav","props","RecipeDetails","item","navigation","navigate","ListEmptyView","removeRecipe","recipe_id","user","auth","currentUser","uid","getItem","recipes","recipesFav","JSON","parse","recipesItems","filter","e","userId","setItem","stringify","setState","state","fetchRecipes","paddingLeft","marginLeft","backgroundColor","opacity","borderColor","borderBottomWidth","uri","URL","recipe_image","borderRadius","fontSize","fontWeight","marginBottom","recipe_title","flexDirection","marginRight","color","recipe_time","recipe_cals","bind","index","toString","recipesJSON","recipesArray"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as firebase from 'firebase';\nimport { withNavigation } from '@react-navigation/compat';\nimport {TouchableOpacity, Dimensions, View, Image, ScrollView, FlatList} from 'react-native';\nimport Icon from 'react-native-vector-icons/SimpleLineIcons';\nimport { Container, Body, Thumbnail, Text, List, Right, ListItem} from 'native-base';\nimport ConfigApp from '../utils/ConfigApp';\nimport ListEmpty from './ListEmpty';\nimport Strings from '../utils/Strings';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar styles = require('../../assets/files/Styles');\nvar {height, width} = Dimensions.get('window');\n\nclass RecipeFav extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n      recipes: []\n    }\n\n  }\n\n  componentDidMount () {\n    this.fetchRecipes();\n  }\n\n  RecipeDetails = (item) => {\n    this.props.navigation.navigate('RecipeDetailsScreen', {item});\n  };\n\nListEmptyView = () => {\n    return (\n      <ListEmpty/>\n    );\n  }\n\nremoveRecipe = async (recipe_id) => {\ntry {\n\nvar user = firebase.auth().currentUser;\nuid = user.uid;\n\nconst recipes = await AsyncStorage.getItem('recipes');\nlet recipesFav = JSON.parse(recipes);\nrecipesItems = recipesFav.filter(function(e){ return e.recipe_id !== recipe_id && e.userId == uid })\n\nawait AsyncStorage.setItem('recipes', JSON.stringify(recipesItems));\n\nthis.setState({ \n...this.state, \nrecipes: recipesItems || [] \n}); \n\n} catch(error) {\n\n}}; \n\n  render () {\n\n    return (\n\n<List>\n\n<FlatList\n          data={ this.state.recipes }\n          refreshing=\"false\"\n          renderItem={({item}) =>\n                \n            <ListItem style={{paddingLeft: 0, marginLeft: 0, backgroundColor:'#FFF', opacity: 1, borderColor: 'rgba(0,0,0,0.05)', borderBottomWidth: 1}}  onPress={() => this.RecipeDetails(item)} >\n              <Thumbnail size={80} source={{ uri: ConfigApp.URL+'images/'+item.recipe_image }} style={{paddingLeft: 10, marginLeft: 10, borderRadius: 10}} />\n              <Body style={{paddingLeft: 0, marginLeft: 0}}>\n                <Text numberOfLines={1} style={{fontSize: 14, fontWeight: 'bold', marginBottom: 5}}>\n                {item.recipe_title}\n                </Text>\n                <View style={{flexDirection: 'row', marginBottom: 5}}>\n                <Image source={require('../../assets/images/cooktime.png')} style={{width: 15, height: 15, marginLeft: 12, marginRight: -8}} />\n                <Text style={{ fontSize: 12, color: '#9e9e9e'}}>{item.recipe_time}</Text>\n                <Image source={require('../../assets/images/calories.png')} style={{width: 15, height: 15, marginRight: -8}} />\n                <Text style={{ fontSize: 12, color: '#9e9e9e'}}>{item.recipe_cals}</Text>\n                </View>\n              </Body>\n              <Right>\n                <TouchableOpacity onPress={this.removeRecipe.bind(this, item.recipe_id)} activeOpacity={1}>\n                <Text note>\n                <Icon name=\"trash\" style={{fontSize: 18}}/>\n                </Text>\n                </TouchableOpacity>\n              </Right>\n            </ListItem>\n          \n}\n        keyExtractor={(item, index) => index.toString()}\n        ListEmptyComponent={this.ListEmptyView}\n\n\n        /> \n\n</List>\n\n    )\n  }\n\n    async fetchRecipes () {\n      var user = firebase.auth().currentUser;\n      uid = user.uid;\n\n      let recipesJSON= await AsyncStorage.getItem('recipes');\n      let recipesFav = JSON.parse(recipesJSON);\n      recipesItems = recipesFav.filter(function(e){\n            return e.userId == uid\n        })\n      const recipesArray = recipesItems || [];\n      this.setState({\n        ...this.state,\n        recipes: recipesArray\n      });\n  }\n\n}\n\nexport default withNavigation(RecipeFav);\n"]},"metadata":{},"sourceType":"module"}
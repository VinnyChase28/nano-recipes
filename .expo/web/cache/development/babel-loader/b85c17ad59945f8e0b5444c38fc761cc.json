{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { withNavigation } from '@react-navigation/compat';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Container, Header, Content, Card, CardItem, Body, Text, Footer, Icon, Item, Input, FooterTab, Button, Left, Right, Title, List, ListItem, Thumbnail } from 'native-base';\nimport Icono from \"@expo/vector-icons/Ionicons\";\nimport SwiperFlatList from 'react-native-swiper-flatlist';\nimport ConfigApp from \"../utils/ConfigApp\";\nimport GridView from 'react-native-super-grid';\nimport Strings from \"../utils/Strings\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport ColorsApp from \"../utils/ColorsApp\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar styles = require(\"../../assets/files/Styles\");\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar ChefsHome = function (_React$PureComponent) {\n  _inherits(ChefsHome, _React$PureComponent);\n\n  var _super = _createSuper(ChefsHome);\n\n  function ChefsHome(props) {\n    var _this;\n\n    _classCallCheck(this, ChefsHome);\n\n    _this = _super.call(this, props);\n\n    _this.RecipesByChef = function (chef_id, chef_title) {\n      _this.props.navigation.navigate('RecipesByChefScreen', {\n        IdChef: chef_id,\n        TitleChef: chef_title\n      });\n    };\n\n    _this.state = {\n      chefs: []\n    };\n    return _this;\n  }\n\n  _createClass(ChefsHome, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return fetch(ConfigApp.URL + 'json/data_chefs.php').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this2.setState({\n          chefs: responseJson.filter(function (e, index) {\n            return index < 6;\n          })\n        }, function () {});\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _jsx(View, {\n        style: {\n          margin: 5\n        },\n        children: _jsx(FlatList, {\n          data: this.state.chefs,\n          refreshing: \"false\",\n          numColumns: 3,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsxs(TouchableOpacity, {\n              onPress: _this3.RecipesByChef.bind(_this3, item.chef_id, item.chef_title),\n              activeOpacity: 1,\n              style: {\n                flex: 1,\n                marginHorizontal: 5,\n                marginBottom: 10,\n                alignItems: 'center',\n                justifyContent: 'center'\n              },\n              children: [_jsx(Image, {\n                source: {\n                  uri: ConfigApp.URL + 'images/' + item.chef_image\n                },\n                style: {\n                  height: 80,\n                  width: 80,\n                  marginBottom: 10,\n                  borderRadius: 80 / 2\n                },\n                imageStyle: {\n                  borderRadius: 80 / 2\n                }\n              }), _jsx(Text, {\n                numberOfLines: 1,\n                style: {\n                  color: '#9e9e9e',\n                  fontSize: 11,\n                  marginBottom: 5\n                },\n                children: item.chef_title\n              })]\n            });\n          },\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          }\n        })\n      });\n    }\n  }]);\n\n  return ChefsHome;\n}(React.PureComponent);\n\nexport default withNavigation(ChefsHome);","map":{"version":3,"sources":["/root/home/projects/modern-recipe/application/components/ChefsHome.js"],"names":["React","PureComponent","withNavigation","Container","Header","Content","Card","CardItem","Body","Text","Footer","Icon","Item","Input","FooterTab","Button","Left","Right","Title","List","ListItem","Thumbnail","Icono","SwiperFlatList","ConfigApp","GridView","Strings","LinearGradient","ColorsApp","styles","require","Dimensions","get","height","width","ChefsHome","props","RecipesByChef","chef_id","chef_title","navigation","navigate","IdChef","TitleChef","state","chefs","fetch","URL","then","response","json","responseJson","setState","filter","e","index","catch","error","console","margin","item","bind","flex","marginHorizontal","marginBottom","alignItems","justifyContent","uri","chef_image","borderRadius","color","fontSize","toString"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react';\nimport { withNavigation } from '@react-navigation/compat';\nimport { ImageBackground, Dimensions, View, ScrollView, ActivityIndicator, TouchableOpacity, FlatList,Image } from 'react-native';\nimport { Container, Header, Content, Card, CardItem, Body, Text, Footer, Icon, Item, Input, FooterTab, Button, Left, Right, Title, List, ListItem, Thumbnail} from 'native-base';\nimport Icono from 'react-native-vector-icons/Ionicons';\nimport SwiperFlatList from 'react-native-swiper-flatlist';\nimport ConfigApp from '../utils/ConfigApp';\nimport GridView from 'react-native-super-grid';\nimport Strings from '../utils/Strings';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport ColorsApp from '../utils/ColorsApp';\n\nvar styles = require('../../assets/files/Styles');\nvar {height, width} = Dimensions.get('window');\n\nclass ChefsHome extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      chefs:[]\n    };\n  }\n\n    componentDidMount() {\n    \n       return fetch(ConfigApp.URL+'json/data_chefs.php')\n         .then((response) => response.json())\n         .then((responseJson) => {\n           this.setState({\n             chefs: responseJson.filter((e, index) => { return index < 6 })\n           }, function() {\n           });\n         })\n         .catch((error) => {\n           console.error(error);\n         });\n     }\n\nRecipesByChef=(chef_id, chef_title)=>{\n      this.props.navigation.navigate('RecipesByChefScreen', { IdChef: chef_id, TitleChef: chef_title });    \n}\n\n\n\trender () {\n\n\t\treturn (\n\n<View style={{margin: 5}}>\n        <FlatList\n          data={ this.state.chefs }\n          refreshing=\"false\"\n          numColumns={3}\n          renderItem={({item}) => \n                <TouchableOpacity onPress={this.RecipesByChef.bind(this, item.chef_id, item.chef_title)} activeOpacity={1} style={{flex: 1, marginHorizontal: 5, marginBottom: 10, alignItems: 'center', justifyContent: 'center' }}>\n                <Image source={{uri: ConfigApp.URL+'images/'+item.chef_image}} style={{ height: 80,  width: 80, marginBottom: 10, borderRadius: 80/2 }} imageStyle={{borderRadius: 80/2}}/>\n                <Text numberOfLines={1} style={{  color: '#9e9e9e', fontSize: 11, marginBottom: 5 }}>{item.chef_title}</Text>\n                </TouchableOpacity>\n}\n        keyExtractor={(item, index) => index.toString()}\n\n        />\n</View>\n\n\t\t)\n\t}\n}\n\nexport default withNavigation(ChefsHome);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Container, Header, Content, List, ListItem, Text, Left, Thumbnail, Button, Body, Right, Switch } from 'native-base';\nimport Strings from \"../utils/Strings\";\nimport ColorsApp from \"../utils/ColorsApp\";\nimport { SimpleLineIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar styles = require(\"../../assets/files/Styles\");\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar SideMenu = function (_Component) {\n  _inherits(SideMenu, _Component);\n\n  var _super = _createSuper(SideMenu);\n\n  function SideMenu() {\n    var _this;\n\n    _classCallCheck(this, SideMenu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.navigateToScreen = function (route) {\n      return function () {\n        _this.props.navigation.navigate(route);\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(SideMenu, [{\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: styles.container_menu,\n        children: [_jsx(View, {\n          style: styles.sideMenu,\n          children: _jsx(Image, {\n            source: require(\"../../assets/images/logo.png\"),\n            style: {\n              flex: 1,\n              width: 220,\n              height: 220\n            },\n            resizeMode: \"contain\"\n          })\n        }), _jsxs(ScrollView, {\n          children: [_jsxs(ListItem, {\n            style: styles.item_menu,\n            onPress: this.navigateToScreen('RecipesCategoriesScreen'),\n            icon: true,\n            children: [_jsx(Left, {\n              style: {\n                borderBottomWidth: 0\n              },\n              children: _jsx(SimpleLineIcons, {\n                name: \"tag\",\n                style: styles.iconSidemenu\n              })\n            }), _jsx(Body, {\n              style: {\n                borderBottomWidth: 0\n              },\n              children: _jsx(Text, {\n                style: styles.text_menu,\n                children: Strings.ST2.toUpperCase()\n              })\n            }), _jsx(Right, {\n              style: {\n                borderBottomWidth: 0\n              },\n              children: _jsx(SimpleLineIcons, {\n                name: \"arrow-right\",\n                style: styles.icon_menu\n              })\n            })]\n          }), _jsxs(ListItem, {\n            style: styles.item_menu,\n            onPress: this.navigateToScreen('ChefsScreen'),\n            icon: true,\n            children: [_jsx(Left, {\n              style: {\n                borderBottomWidth: 0\n              },\n              children: _jsx(SimpleLineIcons, {\n                name: \"user\",\n                style: styles.iconSidemenu\n              })\n            }), _jsx(Body, {\n              style: {\n                borderBottomWidth: 0\n              },\n              children: _jsx(Text, {\n                style: styles.text_menu,\n                children: Strings.ST3.toUpperCase()\n              })\n            }), _jsx(Right, {\n              style: {\n                borderBottomWidth: 0\n              },\n              children: _jsx(SimpleLineIcons, {\n                name: \"arrow-right\",\n                style: styles.icon_menu\n              })\n            })]\n          }), _jsxs(ListItem, {\n            style: styles.item_menu,\n            onPress: this.navigateToScreen('SearchScreen'),\n            icon: true,\n            children: [_jsx(Left, {\n              style: {\n                borderBottomWidth: 0\n              },\n              children: _jsx(SimpleLineIcons, {\n                name: \"magnifier\",\n                style: styles.iconSidemenu\n              })\n            }), _jsx(Body, {\n              style: {\n                borderBottomWidth: 0\n              },\n              children: _jsx(Text, {\n                style: styles.text_menu,\n                children: Strings.ST4.toUpperCase()\n              })\n            }), _jsx(Right, {\n              style: {\n                borderBottomWidth: 0\n              },\n              children: _jsx(SimpleLineIcons, {\n                name: \"arrow-right\",\n                style: styles.icon_menu\n              })\n            })]\n          }), _jsxs(ListItem, {\n            style: styles.item_menu,\n            onPress: this.navigateToScreen('FavoritesScreen'),\n            icon: true,\n            children: [_jsx(Left, {\n              style: {\n                borderBottomWidth: 0\n              },\n              children: _jsx(SimpleLineIcons, {\n                name: \"heart\",\n                style: styles.iconSidemenu\n              })\n            }), _jsx(Body, {\n              style: {\n                borderBottomWidth: 0\n              },\n              children: _jsx(Text, {\n                style: styles.text_menu,\n                children: Strings.ST6.toUpperCase()\n              })\n            }), _jsx(Right, {\n              style: {\n                borderBottomWidth: 0\n              },\n              children: _jsx(SimpleLineIcons, {\n                name: \"arrow-right\",\n                style: styles.icon_menu\n              })\n            })]\n          }), _jsxs(ListItem, {\n            style: styles.item_menu,\n            onPress: this.navigateToScreen('SettingsScreen'),\n            icon: true,\n            children: [_jsx(Left, {\n              style: {\n                borderBottomWidth: 0\n              },\n              children: _jsx(SimpleLineIcons, {\n                name: \"settings\",\n                style: styles.iconSidemenu\n              })\n            }), _jsx(Body, {\n              style: {\n                borderBottomWidth: 0\n              },\n              children: _jsx(Text, {\n                style: styles.text_menu,\n                children: Strings.ST7.toUpperCase()\n              })\n            }), _jsx(Right, {\n              style: {\n                borderBottomWidth: 0\n              },\n              children: _jsx(SimpleLineIcons, {\n                name: \"arrow-right\",\n                style: styles.icon_menu\n              })\n            })]\n          }), _jsxs(ListItem, {\n            style: styles.item_menu,\n            onPress: this.navigateToScreen('LogoutScreen'),\n            icon: true,\n            children: [_jsx(Left, {\n              style: {\n                borderBottomWidth: 0\n              },\n              children: _jsx(SimpleLineIcons, {\n                name: \"login\",\n                style: styles.iconSidemenu\n              })\n            }), _jsx(Body, {\n              style: {\n                borderBottomWidth: 0\n              },\n              children: _jsx(Text, {\n                style: styles.text_menu,\n                children: Strings.ST8.toUpperCase()\n              })\n            }), _jsx(Right, {\n              style: {\n                borderBottomWidth: 0\n              },\n              children: _jsx(SimpleLineIcons, {\n                name: \"arrow-right\",\n                style: styles.icon_menu\n              })\n            })]\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return SideMenu;\n}(Component);\n\nexport { SideMenu as default };","map":{"version":3,"sources":["/root/home/projects/modern-recipe/application/navigations/SideMenu.js"],"names":["React","Component","Container","Header","Content","List","ListItem","Text","Left","Thumbnail","Button","Body","Right","Switch","Strings","ColorsApp","SimpleLineIcons","styles","require","Dimensions","get","height","width","SideMenu","navigateToScreen","route","props","navigation","navigate","container_menu","sideMenu","flex","item_menu","borderBottomWidth","iconSidemenu","text_menu","ST2","toUpperCase","icon_menu","ST3","ST4","ST6","ST7","ST8"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Dimensions, ScrollView, View, Image, TouchableOpacity} from 'react-native';\nimport { Container, Header, Content, List, ListItem, Text, Left, Thumbnail, Button, Body, Right, Switch } from 'native-base';\nimport Strings from '../utils/Strings';\nimport ColorsApp from '../utils/ColorsApp';\nimport { SimpleLineIcons } from '@expo/vector-icons';\n\nvar styles = require('../../assets/files/Styles');\nvar {height, width} = Dimensions.get('window');\n\nexport default class SideMenu extends Component {\n  \n  navigateToScreen = (route) => () => {\n    this.props.navigation.navigate(route);\n  }\n\n  render () {\n    return (\n\n\t\t<View style={styles.container_menu}>\n          <View style={styles.sideMenu}>\n<Image\n      source={require('../../assets/images/logo.png')}\n      style={{flex: 1, width: 220, height: 220}}\n      resizeMode='contain'/>\n</View>\n\n        <ScrollView>\n\n                <ListItem style={styles.item_menu} onPress={this.navigateToScreen('RecipesCategoriesScreen')} icon>\n              <Left style={{borderBottomWidth: 0}}>\n                <SimpleLineIcons name=\"tag\" style={styles.iconSidemenu}/>\n            </Left>\n            <Body style={{borderBottomWidth: 0}}>\n                <Text style={styles.text_menu}>{Strings.ST2.toUpperCase()}</Text>\n              </Body>\n              <Right style={{borderBottomWidth: 0}}>\n                <SimpleLineIcons name=\"arrow-right\" style={styles.icon_menu} />\n              </Right>\n            </ListItem>\n\n                <ListItem style={styles.item_menu} onPress={this.navigateToScreen('ChefsScreen')} icon>\n              <Left style={{borderBottomWidth: 0}}>\n                <SimpleLineIcons name=\"user\" style={styles.iconSidemenu}/>\n            </Left>\n            <Body style={{borderBottomWidth: 0}}>\n                <Text style={styles.text_menu}>{Strings.ST3.toUpperCase()}</Text>\n              </Body>\n              <Right style={{borderBottomWidth: 0}}>\n                <SimpleLineIcons name=\"arrow-right\" style={styles.icon_menu} />\n              </Right>\n            </ListItem>\n\n                <ListItem style={styles.item_menu} onPress={this.navigateToScreen('SearchScreen')} icon>\n              <Left style={{borderBottomWidth: 0}}>\n                <SimpleLineIcons name=\"magnifier\" style={styles.iconSidemenu}/>\n            </Left>\n            <Body style={{borderBottomWidth: 0}}>\n                <Text style={styles.text_menu}>{Strings.ST4.toUpperCase()}</Text>\n              </Body>\n              <Right style={{borderBottomWidth: 0}}>\n                <SimpleLineIcons name=\"arrow-right\" style={styles.icon_menu} />\n              </Right>\n            </ListItem>\n\n                <ListItem style={styles.item_menu} onPress={this.navigateToScreen('FavoritesScreen')} icon>\n              <Left style={{borderBottomWidth: 0}}>\n                <SimpleLineIcons name=\"heart\" style={styles.iconSidemenu}/>\n            </Left>\n            <Body style={{borderBottomWidth: 0}}>\n                <Text style={styles.text_menu}>{Strings.ST6.toUpperCase()}</Text>\n              </Body>\n              <Right style={{borderBottomWidth: 0}}>\n                <SimpleLineIcons name=\"arrow-right\" style={styles.icon_menu} />\n              </Right>\n            </ListItem>\n\n                <ListItem style={styles.item_menu} onPress={this.navigateToScreen('SettingsScreen')} icon>\n              <Left style={{borderBottomWidth: 0}}>\n                <SimpleLineIcons name=\"settings\" style={styles.iconSidemenu}/>\n            </Left>\n            <Body style={{borderBottomWidth: 0}}>\n                <Text style={styles.text_menu}>{Strings.ST7.toUpperCase()}</Text>\n              </Body>\n              <Right style={{borderBottomWidth: 0}}>\n                <SimpleLineIcons name=\"arrow-right\" style={styles.icon_menu} />\n              </Right>\n            </ListItem>\n\n            <ListItem style={styles.item_menu} onPress={this.navigateToScreen('LogoutScreen')} icon>\n              <Left style={{borderBottomWidth: 0}}>\n                <SimpleLineIcons name=\"login\" style={styles.iconSidemenu}/>\n            </Left>\n            <Body style={{borderBottomWidth: 0}}>\n                <Text style={styles.text_menu}>{Strings.ST8.toUpperCase()}</Text>\n              </Body>\n              <Right style={{borderBottomWidth: 0}}>\n                <SimpleLineIcons name=\"arrow-right\" style={styles.icon_menu} />\n              </Right>\n            </ListItem>\n \n        </ScrollView>\n      </View>\n\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}
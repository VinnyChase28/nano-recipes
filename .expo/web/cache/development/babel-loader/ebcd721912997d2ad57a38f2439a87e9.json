{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ConfigApp from \"../utils/ConfigApp\";\nimport { AdMobBanner } from 'expo-ads-admob';\nimport { isIphoneX } from 'react-native-device-detection';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Device = require('react-native-device-detection');\n\nvar styles = require(\"../../assets/files/Styles\");\n\nvar BannerAd = function (_React$Component) {\n  _inherits(BannerAd, _React$Component);\n\n  var _super = _createSuper(BannerAd);\n\n  function BannerAd() {\n    _classCallCheck(this, BannerAd);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BannerAd, [{\n    key: \"_segmentPicker\",\n    value: function _segmentPicker() {\n      if (Device.isIphoneX) {\n        return _jsx(View, {\n          style: styles.bannerAd,\n          children: _jsx(AdMobBanner, {\n            bannerSize: \"banner\",\n            adUnitID: ConfigApp.BANNER_ID,\n            testDeviceID: ConfigApp.TESTDEVICE_ID,\n            onDidFailToReceiveAdWithError: this.bannerError\n          })\n        });\n      } else {\n        return _jsx(View, {\n          style: styles.bannerAdLight,\n          children: _jsx(AdMobBanner, {\n            bannerSize: \"banner\",\n            adUnitID: ConfigApp.BANNER_ID,\n            testDeviceID: ConfigApp.TESTDEVICE_ID,\n            onDidFailToReceiveAdWithError: this.bannerError\n          })\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        children: this._segmentPicker()\n      });\n    }\n  }]);\n\n  return BannerAd;\n}(React.Component);\n\nexport default BannerAd;","map":{"version":3,"sources":["/root/home/projects/modern-recipe/application/components/BannerAd.js"],"names":["React","Component","ConfigApp","AdMobBanner","isIphoneX","Device","require","styles","BannerAd","bannerAd","BANNER_ID","TESTDEVICE_ID","bannerError","bannerAdLight","_segmentPicker"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,OAAOC,SAAP;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,SAAT,QAA0B,+BAA1B;;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,+BAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,6BAApB;;IAEME,Q;;;;;;;;;;;;;WAIN,0BAAiB;AACT,UAAGH,MAAM,CAACD,SAAV,EAAqB;AACnB,eACF,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEG,MAAM,CAACE,QAApB;AAAA,oBACR,KAAC,WAAD;AACE,YAAA,UAAU,EAAC,QADb;AAEE,YAAA,QAAQ,EAAEP,SAAS,CAACQ,SAFtB;AAGE,YAAA,YAAY,EAAER,SAAS,CAACS,aAH1B;AAIE,YAAA,6BAA6B,EAAE,KAAKC;AAJtC;AADQ,UADE;AASD,OAVD,MAUO;AACT,eACN,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEL,MAAM,CAACM,aAApB;AAAA,oBACA,KAAC,WAAD;AACE,YAAA,UAAU,EAAC,QADb;AAEE,YAAA,QAAQ,EAAEX,SAAS,CAACQ,SAFtB;AAGE,YAAA,YAAY,EAAER,SAAS,CAACS,aAH1B;AAIE,YAAA,6BAA6B,EAAE,KAAKC;AAJtC;AADA,UADM;AASD;AACF;;;WAED,kBAAU;AAER,aAEJ,KAAC,IAAD;AAAA,kBACC,KAAKE,cAAL;AADD,QAFI;AAOD;;;;EArCoBd,KAAK,CAACC,S;;AAyC7B,eAAeO,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport{ View} from 'react-native';\nimport ConfigApp from '../utils/ConfigApp';\nimport { AdMobBanner } from 'expo-ads-admob';\nimport { isIphoneX } from 'react-native-device-detection';\nconst Device = require('react-native-device-detection');\n\nvar styles = require('../../assets/files/Styles');\n\nclass BannerAd extends React.Component {\n\n\n\n_segmentPicker() {\n        if(Device.isIphoneX) {\n          return (\n        <View style={styles.bannerAd}>\n<AdMobBanner\n  bannerSize=\"banner\"\n  adUnitID={ConfigApp.BANNER_ID}\n  testDeviceID={ConfigApp.TESTDEVICE_ID}\n  onDidFailToReceiveAdWithError={this.bannerError} />\n</View>\n            );\n        } else {\n      return (\n<View style={styles.bannerAdLight}>\n<AdMobBanner\n  bannerSize=\"banner\"\n  adUnitID={ConfigApp.BANNER_ID}\n  testDeviceID={ConfigApp.TESTDEVICE_ID}\n  onDidFailToReceiveAdWithError={this.bannerError} />\n</View>\n            );\n    }\n  }\n\n  render () {\n\n    return (\n\n<View>\n{this._segmentPicker()}\n</View>\n\n    )\n  }\n\n}\n\nexport default BannerAd;\n"]},"metadata":{},"sourceType":"module"}